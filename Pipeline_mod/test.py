'''
    This script uses the psm output file generated by percolator to further generate the psm, peptide and protein level reports and normalize the apex intensity generated from MOFF.
    It also calculates the fdr at psm, peptide and protein level. This script allows the user to use their own cutoff for the number of peptide and/or spectral count needed minimum 
    to declare a true protein.
        
    Created by Suresh Poudel on 03/15/2017
    Last modified 03/15/2017
    Copyright (c) 2017 Suresh Poudel (ORNL). All rights reserved.
    
    '''

from os import path
import os.path
import glob
import os
import sys
import fileinput
import numpy as np
from collections import defaultdict
import sys, os
from datetime import datetime
import re
from Bio import SeqIO
import subprocess
from decimal import Decimal

cruxDir = sys.argv[1]

def fastaToProtLen(filename):
	protLenDict = {}
	FastaFile = open(filename, 'rU')

	for rec in SeqIO.parse(FastaFile, 'fasta'):
		name = rec.id
		seq = rec.seq
		seqLen = len(rec)
		protLenDict[name]=seqLen
		print name,'\t', seqLen

	FastaFile.close()
	return protLenDict


fasta_list = glob.glob(cruxDir+'/*_New.fasta')

for new_fasta_file in fasta_list:
	fastaDict = fastaToProtLen(new_fasta_file)

print fastaDict